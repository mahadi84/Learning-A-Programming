

## User Authentication-এর উদ্দেশ্য  
1. ব্যবহারকারীর আইডেন্টিটি নিশ্চিত করা (Verify user identity)।  
2. অননুমোদিত অ্যাক্সেস রোধ করা (Prevent unauthorized access)।  
3. ব্যবহারকারীর ডাটা সুরক্ষিত রাখা (Protect user data)।  
4. সেশন ম্যানেজমেন্ট করা (Session management - লগইন অবস্থা ট্র্যাক করা)।  

---


User Authentication হলো একটি প্রক্রিয়া যার মাধ্যমে কোনো সিস্টেম বা অ্যাপ্লিকেশন নিশ্চিত করে যে ব্যবহারকারী (User) আসলেই যেই ব্যক্তি হওয়ার দাবি করছে, সে সত্যিই সেই ব্যক্তি। 

এটি সাধারণত ইউজারনেম (Username) এবং পাসওয়ার্ড (Password) এর মাধ্যমে করা হয়, 
তবে আধুনিক সিস্টেমে বায়োমেট্রিক্স (Biometrics), OTP (One-Time Password), বা টোকেন-ভিত্তিক (Token-Based) প্রমাণীকরণও ব্যবহৃত হয়।  




---

## Authentication-এর সাধারণ পদ্ধতি  

### 1. Password-Based Authentication  
- ইউজারনেম ও পাসওয়ার্ডের মাধ্যমে লগইন।  

### 2. Token-Based Authentication (JWT - JSON Web Token)  
- সার্ভার একটি টোকেন জেনারেট করে, যা ক্লায়েন্ট সংরক্ষণ করে প্রতিটি রিকোয়েস্টে পাঠায়।  

### 3. OAuth (Open Authorization)  
- তৃতীয় পক্ষের সেবা (Google, Facebook, GitHub) ব্যবহার করে লগইন।  
- উদাহরণ: "Login with Google" বাটন।  

### 4. Biometric Authentication  
- ফিঙ্গারপ্রিন্ট, ফেসিয়াল রিকগনিশন বা আইরিস স্ক্যানের মাধ্যমে প্রমাণীকরণ।  
- উদাহরণ: মোবাইল ডিভাইসে ফিঙ্গারপ্রিন্ট লগইন।  

---

## Authentication vs. Authorization
----------------------------------------------------------------
| Authentication (প্রমাণীকরণ) | Authorization (অনুমোদন) |  
|-----------------------------|----------------------------|  
| ব্যবহারকারীর পরিচয় যাচাই করে | ব্যবহারকারীর অ্যাক্সেস লেভেল চেক করে |  
| উদাহরণ: লগইন সিস্টেম | উদাহরণ: অ্যাডমিন প্যানেল অ্যাক্সেস |  
-----------------------------------------------------------------------












-
