
# рж░рж┐рзЯрзЗрж▓-ржУрзЯрж╛рж░рзНрж▓рзНржб рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржирзЗ ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ 

## рзз. ржкрзНрж░рж╢рзНржи: ржХрж┐ржнрж╛ржмрзЗ ржПржХржЯрж┐ рж╣рж╛рж╕ржкрж╛рждрж╛рж▓рзЗ рж░рзЛржЧрзА ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ рж╕рж┐рж╕рзНржЯрзЗржо ржбрж┐ржЬрж╛ржЗржи ржХрж░ржмрзЛ?

### рж╕ржорж╛ржзрж╛ржи:
```mermaid
graph TD
    A[ржирждрзБржи рж░рзЛржЧрзА рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи] --> B[ржкрзНрж░рж┐рзЯрзЛрж░рж┐ржЯрж┐ ржХрж┐ржЙ]
    B --> C{ржЗржорж╛рж░рзНржЬрзЗржирзНрж╕рж┐ рж▓рзЗржнрзЗрж▓}
    C -->|рж╣рж╛ржЗ| D[рждрж╛рждрзНржХрзНрж╖ржгрж┐ржХ ржЪрж┐ржХрж┐рзОрж╕рж╛]
    C -->|рж▓рзЛ| E[рж╕рж╛ржзрж╛рж░ржг рж▓рж╛ржЗржирзЗ ржпрзЛржЧ]
```

ржмрзНржпржмрж╣рзГржд ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░:
- ржкрзНрж░рж┐рзЯрзЛрж░рж┐ржЯрж┐ ржХрж┐ржЙ: ржЬрж░рзБрж░рж┐ рж░рзЛржЧрзАржжрзЗрж░ ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ ржжрж┐рждрзЗ
- рж╣рзНржпрж╛рж╢ ржЯрзЗржмрж┐рж▓: рж░рзЛржЧрзА ржЖржЗржбрж┐ ржжрж┐рзЯрзЗ ржжрзНрж░рзБржд рждржерзНржп ржЦрзБржБржЬрзЗ ржкрзЗрждрзЗ
- рж▓рж┐ржЩрзНржХржб рж▓рж┐рж╕рзНржЯ: ржУрзЯрзЗржЯрж┐ржВ рж▓рж┐рж╕рзНржЯ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯрзЗ

ржХрзЛржб рж╕рзНржирж┐ржкрзЗржЯ (Java):
```java
PriorityQueue<Patient> emergencyQueue = new PriorityQueue<>(Comparator.comparingInt(Patient::getEmergencyLevel));

class Patient {
    int id;
    String name;
    int emergencyLevel; // 1-5 рж╕рзНржХрзЗрж▓
}
```

## рзи. ржкрзНрж░рж╢рзНржи: ржЗ-ржХржорж╛рж░рзНрж╕ рж╕рж╛ржЗржЯрзЗ ржкрзНрж░рзЛржбрж╛ржХрзНржЯ рж╕рж╛рж░рзНржЪ ржЕржкрзНржЯрж┐ржорж╛ржЗржЬ ржХрж┐ржнрж╛ржмрзЗ ржХрж░ржм?

### рж╕ржорж╛ржзрж╛ржи:
```
ржЗржЙржЬрж╛рж░ рж╕рж╛рж░рзНржЪ тЖТ ["рж╕рзНржорж╛рж░рзНржЯржлрзЛржи"] тЖТ ржЯрзНрж░рж╛ржЗ ржбрж╛ржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ тЖТ ["рж╕рзНржорж╛рж░рзНржЯржлрзЛржи X12", "рж╕рзНржорж╛рж░рзНржЯржлрзЛржи Y10"...]
```

ржмрзНржпржмрж╣рзГржд ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░:
- ржЯрзНрж░рж╛ржЗ (Trie): ржЕржЯрзЛ-ржХржоржкрзНрж▓рж┐ржЯ ржПржмржВ ржлрж╛рж╕рзНржЯ ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕ рж╕рж╛рж░рзНржЪрзЗрж░ ржЬржирзНржп
- рж╣рзНржпрж╛рж╢ ржорзНржпрж╛ржк: ржкрзНрж░рзЛржбрж╛ржХрзНржЯ ID ржерзЗржХрзЗ ржбрж┐ржЯрзЗржЗрж▓рж╕ ржорзНржпрж╛ржкрж┐ржВ

ржХрзЛржб рж╕рзНржирж┐ржкрзЗржЯ (Python):
```python
class TrieNode:
    def __init__(self):
        self.children = {}
        self.products = []

def add_product(root, product_name, product_id):
    node = root
    for char in product_name:
        if char not in node.children:
            node.children[char] = TrieNode()
        node = node.children[char]
    node.products.append(product_id)
```

## рзй. ржкрзНрж░рж╢рзНржи: рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐рзЯрж╛рждрзЗ ржорж┐ржЙржЪрзБрзЯрж╛рж▓ ржлрзНрж░рзЗржирзНржб ржХрж┐ржнрж╛ржмрзЗ ржЦрзБржБржЬржм?

### рж╕ржорж╛ржзрж╛ржи:
```
ржЖржкржирж╛рж░ ржлрзНрж░рзЗржирзНржб рж▓рж┐рж╕рзНржЯ: [A, B, C]  
ржлрзНрж░рзЗржирзНржб X ржПрж░ ржлрзНрж░рзЗржирзНржб рж▓рж┐рж╕рзНржЯ: [B, C, D]  
ржорж┐ржЙржЪрзБрзЯрж╛рж▓ ржлрзНрж░рзЗржирзНржб = ржЗржирзНржЯрж╛рж░рж╕рзЗржХрж╢ржи [B, C]
```

ржмрзНржпржмрж╣рзГржд ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░:
- рж╣рзНржпрж╛рж╢ рж╕рзЗржЯ: ржжрзНрж░рзБржд ржЗржирзНржЯрж╛рж░рж╕рзЗржХрж╢ржи ржмрзЗрж░ ржХрж░рждрзЗ
- ржЧрзНрж░рж╛ржл: рж╕рзЛрж╢рзНржпрж╛рж▓ ржХрж╛ржирзЗржХрж╢ржи рж░рж┐ржкрзНрж░рзЗржЬрзЗржирзНржЯрзЗрж╢ржирзЗрж░ ржЬржирзНржп

ржХрзЛржб рж╕рзНржирж┐ржкрзЗржЯ (JavaScript):
```javascript
const yourFriends = new Set(['A', 'B', 'C']);
const xFriends = new Set(['B', 'C', 'D']);

function findMutual(yourFriends, xFriends) {
    return [...yourFriends].filter(friend => xFriends.has(friend));
}
// Output: ['B', 'C']
```

## рзк. ржкрзНрж░рж╢рзНржи: GPS ржЕрзНржпрж╛ржкрзЗ рж╕ржмржЪрзЗрзЯрзЗ ржЫрзЛржЯ рж░рзБржЯ ржХрж┐ржнрж╛ржмрзЗ ржмрзЗрж░ ржХрж░ржм?

### рж╕ржорж╛ржзрж╛ржи:
```
ржбрж┐ржЬржХрзНрж╕рзНржЯрзНрж░рж╛ ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржо:
1. рж╕ржм рж▓рзЛржХрзЗрж╢ржирзЗрж░ ржжрзВрж░рждрзНржм = infinity
2. рж╕рзНржЯрж╛рж░рзНржЯ ржкрзЯрзЗржирзНржЯ = 0
3. ржкрзНрж░рждрж┐ржмрж╛рж░ ржирж┐ржХржЯрждржо ржирзЛржб ржнрж┐ржЬрж┐ржЯ ржХрж░рзБржи
4. ржирзЗржЗржмрж╛рж░ржжрзЗрж░ ржжрзВрж░рждрзНржм ржЖржкржбрзЗржЯ ржХрж░рзБржи
```

ржмрзНржпржмрж╣рзГржд ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░:
- ржорж┐ржи-рж╣рж┐ржк: ржирж┐ржХржЯрждржо ржирзЛржб рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рждрзЗ
- ржЧрзНрж░рж╛ржл: рж░рж╛рж╕рзНрждрж╛ ржУ ржХрж╛ржирзЗржХрж╢ржи рж░рж┐ржкрзНрж░рзЗржЬрзЗржирзНржЯрзЗрж╢ржирзЗрж░ ржЬржирзНржп

ржнрж┐ржЬрзБрзЯрж╛рж▓рж╛ржЗржЬрзЗрж╢ржи:
```
A --5-- B --3-- C
 \     / 
  2   1
   \ /
    D

A ржерзЗржХрзЗ C ржПрж░ рж╕ржмржЪрзЗрзЯрзЗ ржЫрзЛржЯ рж░рзБржЯ: A тЖТ D тЖТ B тЖТ C (ржорзЛржЯ ржжрзВрж░рждрзНржм=6)
```

## рзл. ржкрзНрж░рж╢рзНржи: ржЕржирж▓рж╛ржЗржи рж╢ржкрж┐ржВрзЯрзЗ рж░рж┐ржХржорзЗржирзНржбрзЗрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?

### рж╕ржорж╛ржзрж╛ржи:
```
ржЗржЙржЬрж╛рж░ A ржПрж░ ржкржЫржирзНржж = [X, Y]  
ржЗржЙржЬрж╛рж░ B ржПрж░ ржкржЫржирзНржж = [X, Z]  
рж░рж┐ржХржорзЗржирзНржб Z ржЗржЙржЬрж╛рж░ A ржХрзЗ
```

ржмрзНржпржмрж╣рзГржд ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░:
- ржорзНржпрж╛ржЯрзНрж░рж┐ржХрзНрж╕: ржЗржЙржЬрж╛рж░-ржЖржЗржЯрзЗржо ржкрзНрж░рзЗржлрж╛рж░рзЗржирзНрж╕ рж╕рзНржЯрзЛрж░ ржХрж░рждрзЗ
- ржЧрзНрж░рж╛ржл: ржЖржЗржЯрзЗржо рж╕рж┐ржорж┐рж▓рж╛рж░рж┐ржЯрж┐ ржХрзНржпрж╛рж▓ржХрзБрж▓рзЗрж╢ржирзЗрж░ ржЬржирзНржп

ржХрзЛржб рж╕рзНржирж┐ржкрзЗржЯ (C++):
```cpp
unordered_map<int, vector<int>> userPreferences; // userID -> itemIDs
unordered_map<int, vector<int>> itemUsers; // itemID -> userIDs

vector<int> getRecommendations(int userId) {
    // Collaborative filtering logic
}
```

## ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕ ржкрзНрж░рж╢рзНржирж╛ржмрж▓рзА
1. ржПржХржЯрж┐ ржХрж▓ рж╕рзЗржирзНржЯрж╛рж░рзЗ ржХрж▓ рж░рзБржЯрж┐ржВ рж╕рж┐рж╕рзНржЯрзЗржо ржХрж┐ржнрж╛ржмрзЗ ржбрж┐ржЬрж╛ржЗржи ржХрж░ржмрзЗржи? (ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи: ржХрж┐ржЙ)
2. ржлрж╛ржЗрж▓ ржПржХрзНрж╕ржкрзНрж▓рзЛрж░рж╛рж░рзЗ ржлрзЛрж▓рзНржбрж╛рж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржХрж┐ржнрж╛ржмрзЗ ржЗржоржкрзНрж▓рж┐ржорзЗржирзНржЯ ржХрж░ржмрзЗржи? (ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи: ржЯрзНрж░рж┐)
3. рж░рж┐рзЯрзЗрж▓-ржЯрж╛ржЗржо рж╕рзНржЯржХ ржорж╛рж░рзНржХрзЗржЯ ржбрзЗржЯрж╛ ржнрж┐ржЬрзБрзЯрж╛рж▓рж╛ржЗржЬрзЗрж╢ржи? (ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи: рж╕рзНржЯрзНржпрж╛ржХ/ржЕрзНржпрж╛рж░рзЗ)
4. ржорзБржнрж┐ рж╕рзНржЯрзНрж░рж┐ржорж┐ржВрзЯрзЗ ржмрж╛ржлрж╛рж░рж┐ржВ? (ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи: рж╕рж╛рж░рзНржХрзБрж▓рж╛рж░ ржХрж┐ржЙ)

> ЁЯТб ржЯрж┐ржк: ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЖржЧрзЗ ржирж┐ржЬрзЗржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи:
> - ржХрзЛржи ржЕржкрж╛рж░рзЗрж╢ржи рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ рж╣ржмрзЗ (рж╕рж╛рж░рзНржЪ/ржЗржирж╕рж╛рж░рзНржЯ/ржбрж┐рж▓рж┐ржЯ)?
> - ржбрзЗржЯрж╛ рж╕рж╛ржЗржЬ ржХржд ржмрзЬ рж╣ржмрзЗ?
> - ржХржиржХрж╛рж░рзЗржирзНрж╕рж┐ ржжрж░ржХрж╛рж░ ржХрж┐ ржирж╛?






-
